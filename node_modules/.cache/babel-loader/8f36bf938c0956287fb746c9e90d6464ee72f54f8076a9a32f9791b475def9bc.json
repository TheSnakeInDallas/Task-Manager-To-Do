{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { Todo } from \"../Todo/Todo\";\n// import { TodoForm } from \"../TodoForm/TodoForm\";\n// import { v4 as uuidv4 } from \"uuid\";\n// import { EditTodoForm } from \"../EditTodoForm/EditTodoForm\";\n\n// export const TodoWrapper = () => {\n//   const [todos, setTodos] = useState([]);\n\n//   const addTodo = (todo) => {\n//     setTodos([\n//       ...todos,\n//       { id: uuidv4(), task: todo, completed: false, isEditing: false },\n//     ]);\n//   };\n\n//   const deleteTodo = (id) => setTodos(todos.filter((todo) => todo.id !== id));\n\n//   const toggleComplete = (id) => {\n//     setTodos(\n//       todos.map((todo) =>\n//         todo.id === id ? { ...todo, completed: !todo.completed } : todo\n//       )\n//     );\n//   };\n\n//   const editTodo = (id) => {\n//     setTodos(\n//       todos.map((todo) =>\n//         todo.id === id ? { ...todo, isEditing: !todo.isEditing } : todo\n//       )\n//     );\n//   };\n\n//   const editTask = (task, id) => {\n//     setTodos(\n//       todos.map((todo) =>\n//         todo.id === id ? { ...todo, task, isEditing: !todo.isEditing } : todo\n//       )\n//     );\n//   };\n\n//   return (\n//     <div className=\"TodoWrapper\">\n//       <h1>Your tasks</h1>\n//       <TodoForm addTodo={addTodo} />\n//       {todos.map((todo) =>\n//         todo.isEditing ? (\n//           <EditTodoForm editTodo={editTask} task={todo} />\n//         ) : (\n//           <Todo\n//             key={todo.id}\n//             task={todo}\n//             deleteTodo={deleteTodo}\n//             editTodo={editTodo}\n//             toggleComplete={toggleComplete}\n//           />\n//         )\n//       )}\n//     </div>\n//   );\n// };","map":{"version":3,"names":[],"sources":["C:/Users/Qanto/Desktop/projects/main-workspace/src/components/TodoWrapper/TodoWrapper.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { Todo } from \"../Todo/Todo\";\r\n// import { TodoForm } from \"../TodoForm/TodoForm\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n// import { EditTodoForm } from \"../EditTodoForm/EditTodoForm\";\r\n\r\n// export const TodoWrapper = () => {\r\n//   const [todos, setTodos] = useState([]);\r\n\r\n//   const addTodo = (todo) => {\r\n//     setTodos([\r\n//       ...todos,\r\n//       { id: uuidv4(), task: todo, completed: false, isEditing: false },\r\n//     ]);\r\n//   };\r\n\r\n//   const deleteTodo = (id) => setTodos(todos.filter((todo) => todo.id !== id));\r\n\r\n//   const toggleComplete = (id) => {\r\n//     setTodos(\r\n//       todos.map((todo) =>\r\n//         todo.id === id ? { ...todo, completed: !todo.completed } : todo\r\n//       )\r\n//     );\r\n//   };\r\n\r\n//   const editTodo = (id) => {\r\n//     setTodos(\r\n//       todos.map((todo) =>\r\n//         todo.id === id ? { ...todo, isEditing: !todo.isEditing } : todo\r\n//       )\r\n//     );\r\n//   };\r\n\r\n//   const editTask = (task, id) => {\r\n//     setTodos(\r\n//       todos.map((todo) =>\r\n//         todo.id === id ? { ...todo, task, isEditing: !todo.isEditing } : todo\r\n//       )\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"TodoWrapper\">\r\n//       <h1>Your tasks</h1>\r\n//       <TodoForm addTodo={addTodo} />\r\n//       {todos.map((todo) =>\r\n//         todo.isEditing ? (\r\n//           <EditTodoForm editTodo={editTask} task={todo} />\r\n//         ) : (\r\n//           <Todo\r\n//             key={todo.id}\r\n//             task={todo}\r\n//             deleteTodo={deleteTodo}\r\n//             editTodo={editTodo}\r\n//             toggleComplete={toggleComplete}\r\n//           />\r\n//         )\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}