{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Qanto\\\\Desktop\\\\projects\\\\main-workspace\\\\src\\\\components\\\\TodoWrapper\\\\TodoWrapper.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { Todo } from \"../Todo/Todo\";\n// import { TodoForm } from \"../TodoForm/TodoForm\";\n// import { v4 as uuidv4 } from \"uuid\";\n// import { EditTodoForm } from \"../EditTodoForm/EditTodoForm\";\n\n// export const TodoWrapper = () => {\n//   const [todos, setTodos] = useState([]);\n\n//   const addTodo = (todo) => {\n//     setTodos([\n//       ...todos,\n//       { id: uuidv4(), task: todo, completed: false, isEditing: false },\n//     ]);\n//   };\n\n//   const deleteTodo = (id) => setTodos(todos.filter((todo) => todo.id !== id));\n\n//   const toggleComplete = (id) => {\n//     setTodos(\n//       todos.map((todo) =>\n//         todo.id === id ? { ...todo, completed: !todo.completed } : todo\n//       )\n//     );\n//   };\n\n//   const editTodo = (id) => {\n//     setTodos(\n//       todos.map((todo) =>\n//         todo.id === id ? { ...todo, isEditing: !todo.isEditing } : todo\n//       )\n//     );\n//   };\n\n//   const editTask = (task, id) => {\n//     setTodos(\n//       todos.map((todo) =>\n//         todo.id === id ? { ...todo, task, isEditing: !todo.isEditing } : todo\n//       )\n//     );\n//   };\n\n//   return (\n//     <div className=\"TodoWrapper\">\n//       <h1>Your tasks</h1>\n//       <TodoForm addTodo={addTodo} />\n//       {todos.map((todo) =>\n//         todo.isEditing ? (\n//           <EditTodoForm editTodo={editTask} task={todo} />\n//         ) : (\n//           <Todo\n//             key={todo.id}\n//             task={todo}\n//             deleteTodo={deleteTodo}\n//             editTodo={editTodo}\n//             toggleComplete={toggleComplete}\n//           />\n//         )\n//       )}\n//     </div>\n//   );\n// };\n\nimport React, { useState } from \"react\";\nimport { Todo } from \"../Todo/Todo\";\nimport { TodoForm } from \"../TodoForm/TodoForm\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { EditTodoForm } from \"../EditTodoForm/EditTodoForm\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTodoWrapper = styled.div`\n  max-width: 500px;\n  width: 100%;\n  background: #282828;\n  margin-top: 5rem;\n  padding: 2rem;\n  border-radius: 5px;\n`;\n\n// export const TodoWrapper = () => {\n//   const [todos, setTodos] = useState([]);\n//   const [editingTodoId, setEditingTodoId] = useState(null);\n\n//   const addTodo = (task) => {\n//     if (task.trim() !== \"\") {\n//       const newTodo = {\n// \t\tid: uuidv4(),\n//         task: task,\n//         completed: false,\n//       };\n//       setTodos([...todos, newTodo]);\n//     }\n//   };\n_c = StyledTodoWrapper;\nexport const TodoWrapper = ({\n  todos,\n  boardId,\n  editTodo\n}) => {\n  _s();\n  const addTodo = task => {\n    if (task.trim() !== \"\") {\n      const newTodo = {\n        id: uuidv4(),\n        task: task,\n        completed: false\n      };\n      const updatedTodos = [...todos, newTodo];\n      // Обновляем список задач в блоке задач по идентификатору\n      // Вызываем создавшуюся функцию createUpdatedTaskBoards из ТаскБорд листа и передаем туда апдейтод тодос\n    }\n  };\n\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n  const toggleCompleteTodo = id => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          completed: !todo.completed\n        };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  const [editingTodoId, setEditingTodoId] = useState(null);\n  const handleEditTodo = id => {\n    setEditingTodoId(id);\n  };\n  return /*#__PURE__*/_jsxDEV(StyledTodoWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 3\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: editingTodoId === todo.id ? /*#__PURE__*/_jsxDEV(EditTodoForm, {\n        editTodo: editTodo,\n        task: todo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(Todo, {\n        task: todo,\n        deleteTodo: deleteTodo,\n        handleEditTodo: handleEditTodo,\n        toggleComplete: toggleCompleteTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 6\n      }, this)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 4\n  }, this);\n};\n_s(TodoWrapper, \"K9R/09LqHerT4q7Dk67PeWVsixk=\");\n_c2 = TodoWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledTodoWrapper\");\n$RefreshReg$(_c2, \"TodoWrapper\");","map":{"version":3,"names":["React","useState","Todo","TodoForm","v4","uuidv4","EditTodoForm","styled","jsxDEV","_jsxDEV","StyledTodoWrapper","div","_c","TodoWrapper","todos","boardId","editTodo","_s","addTodo","task","trim","newTodo","id","completed","updatedTodos","deleteTodo","setTodos","filter","todo","toggleCompleteTodo","map","editingTodoId","setEditingTodoId","handleEditTodo","children","fileName","_jsxFileName","lineNumber","columnNumber","toggleComplete","_c2","$RefreshReg$"],"sources":["C:/Users/Qanto/Desktop/projects/main-workspace/src/components/TodoWrapper/TodoWrapper.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { Todo } from \"../Todo/Todo\";\r\n// import { TodoForm } from \"../TodoForm/TodoForm\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n// import { EditTodoForm } from \"../EditTodoForm/EditTodoForm\";\r\n\r\n// export const TodoWrapper = () => {\r\n//   const [todos, setTodos] = useState([]);\r\n\r\n//   const addTodo = (todo) => {\r\n//     setTodos([\r\n//       ...todos,\r\n//       { id: uuidv4(), task: todo, completed: false, isEditing: false },\r\n//     ]);\r\n//   };\r\n\r\n//   const deleteTodo = (id) => setTodos(todos.filter((todo) => todo.id !== id));\r\n\r\n//   const toggleComplete = (id) => {\r\n//     setTodos(\r\n//       todos.map((todo) =>\r\n//         todo.id === id ? { ...todo, completed: !todo.completed } : todo\r\n//       )\r\n//     );\r\n//   };\r\n\r\n//   const editTodo = (id) => {\r\n//     setTodos(\r\n//       todos.map((todo) =>\r\n//         todo.id === id ? { ...todo, isEditing: !todo.isEditing } : todo\r\n//       )\r\n//     );\r\n//   };\r\n\r\n//   const editTask = (task, id) => {\r\n//     setTodos(\r\n//       todos.map((todo) =>\r\n//         todo.id === id ? { ...todo, task, isEditing: !todo.isEditing } : todo\r\n//       )\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"TodoWrapper\">\r\n//       <h1>Your tasks</h1>\r\n//       <TodoForm addTodo={addTodo} />\r\n//       {todos.map((todo) =>\r\n//         todo.isEditing ? (\r\n//           <EditTodoForm editTodo={editTask} task={todo} />\r\n//         ) : (\r\n//           <Todo\r\n//             key={todo.id}\r\n//             task={todo}\r\n//             deleteTodo={deleteTodo}\r\n//             editTodo={editTodo}\r\n//             toggleComplete={toggleComplete}\r\n//           />\r\n//         )\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Todo } from \"../Todo/Todo\";\r\nimport { TodoForm } from \"../TodoForm/TodoForm\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { EditTodoForm } from \"../EditTodoForm/EditTodoForm\";\r\nimport styled from 'styled-components';\r\n\r\nconst StyledTodoWrapper = styled.div`\r\n  max-width: 500px;\r\n  width: 100%;\r\n  background: #282828;\r\n  margin-top: 5rem;\r\n  padding: 2rem;\r\n  border-radius: 5px;\r\n`;\r\n\r\n// export const TodoWrapper = () => {\r\n//   const [todos, setTodos] = useState([]);\r\n//   const [editingTodoId, setEditingTodoId] = useState(null);\r\n\r\n//   const addTodo = (task) => {\r\n//     if (task.trim() !== \"\") {\r\n//       const newTodo = {\r\n// \t\tid: uuidv4(),\r\n//         task: task,\r\n//         completed: false,\r\n//       };\r\n//       setTodos([...todos, newTodo]);\r\n//     }\r\n//   };\r\n\r\nexport const TodoWrapper = ({ todos, boardId, editTodo }) => {\r\n\tconst addTodo = (task) => {\r\n\t  if (task.trim() !== \"\") {\r\n\t\tconst newTodo = {\r\n\t\t  id: uuidv4(),\r\n\t\t  task: task,\r\n\t\t  completed: false,\r\n\t\t};\r\n\t\tconst updatedTodos = [...todos, newTodo];\r\n\t\t// Обновляем список задач в блоке задач по идентификатору\r\n\t\t// Вызываем создавшуюся функцию createUpdatedTaskBoards из ТаскБорд листа и передаем туда апдейтод тодос\r\n\t  }\r\n\t};\r\n  \r\n\tconst deleteTodo = (id) => {\r\n\t  setTodos(todos.filter((todo) => todo.id !== id));\r\n\t};\r\n  \r\n\tconst toggleCompleteTodo = (id) => {\r\n\t  const updatedTodos = todos.map((todo) => {\r\n\t\tif (todo.id === id) {\r\n\t\t  return {\r\n\t\t\t...todo,\r\n\t\t\tcompleted: !todo.completed,\r\n\t\t  };\r\n\t\t}\r\n\t\treturn todo;\r\n\t  });\r\n\t  setTodos(updatedTodos);\r\n\t};\r\n  \r\n\tconst [editingTodoId, setEditingTodoId] = useState(null);\r\n  \r\n\tconst handleEditTodo = (id) => {\r\n\t  setEditingTodoId(id);\r\n\t};\r\n  \r\n\treturn (\r\n\t  <StyledTodoWrapper>\r\n\t\t<h2>Your Tasks</h2>\r\n\t\t<TodoForm addTodo={addTodo} />\r\n\t\t{todos.map((todo) => (\r\n\t\t  <div key={todo.id}>\r\n\t\t\t{editingTodoId === todo.id ? (\r\n\t\t\t  <EditTodoForm editTodo={editTodo} task={todo} />\r\n\t\t\t) : (\r\n\t\t\t  <Todo\r\n\t\t\t\ttask={todo}\r\n\t\t\t\tdeleteTodo={deleteTodo}\r\n\t\t\t\thandleEditTodo={handleEditTodo}\r\n\t\t\t\ttoggleComplete={toggleCompleteTodo}\r\n\t\t\t  />\r\n\t\t\t)}\r\n\t\t  </div>\r\n\t\t))}\r\n\t  </StyledTodoWrapper>\r\n\t);\r\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}