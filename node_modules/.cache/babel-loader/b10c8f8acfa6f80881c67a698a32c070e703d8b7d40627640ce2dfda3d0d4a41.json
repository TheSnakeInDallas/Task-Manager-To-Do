{"ast":null,"code":"import React, { useEffect, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { navigationLinks } from \"../../data/data\";\n// import { SidebarContext } from \"../../context/sidebarContext\";\n\nconst SidebarContainer = styled.div`\n  background-color: var(--clr-primary);\n  width: 260px;\n  padding: 36px 20px;\n  transition: var(--transition-default);\n\n  &.sidebar-change {\n    margin-left: -260px;\n  }\n\n  @media screen and (max-width: 1400px) {\n    padding: 24px 16px;\n  }\n\n  @media screen and (max-width: 1200px) {\n    width: 72px;\n    padding-left: 12px;\n    padding-right: 12px;\n\n    &.sidebar-change {\n      margin-left: -72px;\n    }\n  }\n\n  @media screen and (max-width: 420px) {\n    margin-left: -72px;\n\n    &.sidebar-change {\n      margin-left: 0px;\n    }\n  }\n`;\nconst UserInfo = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  column-gap: 16px;\n`;\nconst InfoName = styled.span`\n  font-weight: 500;\n  font-size: 20px;\n  color: var(--clr-white);\n  text-transform: uppercase;\n\n  @media screen and (max-width: 1200px) {\n    display: none;\n  }\n`;\nconst Navigation = styled.nav`\n  margin-top: 28px;\n  height: 450px;\n  overflow-y: scroll;\n\n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n\n  &::-webkit-scrollbar-track {\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    border-radius: 18px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: var(--clr-pumpkin);\n    border-radius: 18px;\n  }\n`;\nconst NavList = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\nconst NavItem = styled.li`\n  margin-bottom: 10px;\n  margin-right: 4px;\n`;\nconst NavLink = styled.a`\n  display: block;\n  height: 44px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: flex;\n  padding: 6px 14px;\n  column-gap: 12px;\n  letter-spacing: 0.03em;\n  border: 1px solid transparent;\n  transition: var(--transition-default);\n\n  &:hover {\n    border: 1px solid var(--clr-primar-light);\n  }\n\n  &.active {\n    background-color: var(--clr-pumpkin);\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 20px 25px -5px,\n      rgba(0, 0, 0, 0.04) 0px 10px 10px -5px;\n  }\n`;\nconst NavLinkIcon = styled.img`\n  width: 22px;\n`;\nconst NavLinkText = styled.span`\n  text-transform: capitalize;\n\n  @media screen and (max-width: 1200px) {\n    display: none;\n  }\n`;\n\n// const Sidebar = () => {\n//   const [activeLinkIdx] = useState(1);\n//   const [sidebarClass, setSidebarClass] = useState(\"\");\n//   const { isSidebarOpen } = useContext(SidebarContext);\n\n//   useEffect(() => {\n//     if (isSidebarOpen) {\n//       setSidebarClass(\"sidebar-change\");\n//     } else {\n//       setSidebarClass(\"\");\n//     }\n//   }, [isSidebarOpen]);\n\n//   return (\n//     <SidebarContainer className={`sidebar ${sidebarClass}`}>\n//       <UserInfo>\n//         <InfoName>Username</InfoName>\n//       </UserInfo>\n\n//       <Navigation>\n//         <NavList>\n//           {navigationLinks.map((navigationLink) => (\n//             <NavItem key={navigationLink.id}>\n//               <NavLink\n//                 href=\"#\"\n//                 className={`nav-link ${\n//                   navigationLink.id === activeLinkIdx ? \"active\" : \"\"\n//                 }`}\n//               >\n//                 <NavLinkIcon\n//                   src={navigationLink.image}\n//                   alt={navigationLink.title}\n//                 />\n//                 <NavLinkText>{navigationLink.title}</NavLinkText>\n//               </NavLink>\n//             </NavItem>\n//           ))}\n//         </NavList>\n//       </Navigation>\n//     </SidebarContainer>\n//   );\n// };\n\nexport default Sidebar;","map":{"version":3,"names":["React","useEffect","useState","useContext","styled","navigationLinks","SidebarContainer","div","UserInfo","InfoName","span","Navigation","nav","NavList","ul","NavItem","li","NavLink","a","NavLinkIcon","img","NavLinkText","Sidebar"],"sources":["C:/Users/Qanto/Desktop/projects/main-workspace/src/components/SideBar/SideBar.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { navigationLinks } from \"../../data/data\";\r\n// import { SidebarContext } from \"../../context/sidebarContext\";\r\n\r\nconst SidebarContainer = styled.div`\r\n  background-color: var(--clr-primary);\r\n  width: 260px;\r\n  padding: 36px 20px;\r\n  transition: var(--transition-default);\r\n\r\n  &.sidebar-change {\r\n    margin-left: -260px;\r\n  }\r\n\r\n  @media screen and (max-width: 1400px) {\r\n    padding: 24px 16px;\r\n  }\r\n\r\n  @media screen and (max-width: 1200px) {\r\n    width: 72px;\r\n    padding-left: 12px;\r\n    padding-right: 12px;\r\n\r\n    &.sidebar-change {\r\n      margin-left: -72px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 420px) {\r\n    margin-left: -72px;\r\n\r\n    &.sidebar-change {\r\n      margin-left: 0px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst UserInfo = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  column-gap: 16px;\r\n`;\r\n\r\nconst InfoName = styled.span`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  color: var(--clr-white);\r\n  text-transform: uppercase;\r\n\r\n  @media screen and (max-width: 1200px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Navigation = styled.nav`\r\n  margin-top: 28px;\r\n  height: 450px;\r\n  overflow-y: scroll;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 4px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n    border-radius: 18px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: var(--clr-pumpkin);\r\n    border-radius: 18px;\r\n  }\r\n`;\r\n\r\nconst NavList = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n`;\r\n\r\nconst NavItem = styled.li`\r\n  margin-bottom: 10px;\r\n  margin-right: 4px;\r\n`;\r\n\r\nconst NavLink = styled.a`\r\n  display: block;\r\n  height: 44px;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex;\r\n  padding: 6px 14px;\r\n  column-gap: 12px;\r\n  letter-spacing: 0.03em;\r\n  border: 1px solid transparent;\r\n  transition: var(--transition-default);\r\n\r\n  &:hover {\r\n    border: 1px solid var(--clr-primar-light);\r\n  }\r\n\r\n  &.active {\r\n    background-color: var(--clr-pumpkin);\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 20px 25px -5px,\r\n      rgba(0, 0, 0, 0.04) 0px 10px 10px -5px;\r\n  }\r\n`;\r\n\r\nconst NavLinkIcon = styled.img`\r\n  width: 22px;\r\n`;\r\n\r\nconst NavLinkText = styled.span`\r\n  text-transform: capitalize;\r\n\r\n  @media screen and (max-width: 1200px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\n// const Sidebar = () => {\r\n//   const [activeLinkIdx] = useState(1);\r\n//   const [sidebarClass, setSidebarClass] = useState(\"\");\r\n//   const { isSidebarOpen } = useContext(SidebarContext);\r\n\r\n//   useEffect(() => {\r\n//     if (isSidebarOpen) {\r\n//       setSidebarClass(\"sidebar-change\");\r\n//     } else {\r\n//       setSidebarClass(\"\");\r\n//     }\r\n//   }, [isSidebarOpen]);\r\n\r\n//   return (\r\n//     <SidebarContainer className={`sidebar ${sidebarClass}`}>\r\n//       <UserInfo>\r\n//         <InfoName>Username</InfoName>\r\n//       </UserInfo>\r\n\r\n//       <Navigation>\r\n//         <NavList>\r\n//           {navigationLinks.map((navigationLink) => (\r\n//             <NavItem key={navigationLink.id}>\r\n//               <NavLink\r\n//                 href=\"#\"\r\n//                 className={`nav-link ${\r\n//                   navigationLink.id === activeLinkIdx ? \"active\" : \"\"\r\n//                 }`}\r\n//               >\r\n//                 <NavLinkIcon\r\n//                   src={navigationLink.image}\r\n//                   alt={navigationLink.title}\r\n//                 />\r\n//                 <NavLinkText>{navigationLink.title}</NavLinkText>\r\n//               </NavLink>\r\n//             </NavItem>\r\n//           ))}\r\n//         </NavList>\r\n//       </Navigation>\r\n//     </SidebarContainer>\r\n//   );\r\n// };\r\n\r\nexport default Sidebar;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,eAAe,QAAQ,iBAAiB;AACjD;;AAEA,MAAMC,gBAAgB,GAAGF,MAAM,CAACG,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,QAAQ,GAAGJ,MAAM,CAACG,GAAI;AAC5B;AACA;AACA;AACA;AACA,CAAC;AAED,MAAME,QAAQ,GAAGL,MAAM,CAACM,IAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,UAAU,GAAGP,MAAM,CAACQ,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,OAAO,GAAGT,MAAM,CAACU,EAAG;AAC1B;AACA;AACA;AACA,CAAC;AAED,MAAMC,OAAO,GAAGX,MAAM,CAACY,EAAG;AAC1B;AACA;AACA,CAAC;AAED,MAAMC,OAAO,GAAGb,MAAM,CAACc,CAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,WAAW,GAAGf,MAAM,CAACgB,GAAI;AAC/B;AACA,CAAC;AAED,MAAMC,WAAW,GAAGjB,MAAM,CAACM,IAAK;AAChC;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}